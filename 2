import numpy as np


def factor(n):
    if n < 0:
        return -1
    if n == 0 or n == 1:
        return 1
    if n > 1:
        return factor(n - 1) * n


def C_function_one(n, m):
    if n >= m:
        return factor(n) / (factor(n - m) * factor(m))
    else:
        return -1


def A_function_two(n, m):
    if n >= m:
        return factor(n) / (factor(n - m))
    else:
        return -1


def P_function_three(*params):
    arr = np.array(params)
    n = arr.sum()
    return factor(n) / P_func_help_three(arr)


def P_func_help_three(arr):
    multi = 1
    for num in arr:
        if num <= 0:
            return -1
        multi *= factor(num)
    return multi


def C_func_four(m, *params):
    arr = np.array(params)
    n = arr.sum()
    for num in arr:
        if num <= 0:
            return -1

    return factor(n + m - 1) / (factor(n - 1) * factor(m))


def A_func_five(m, *params):
    n = np.array(params).sum()
    if n <= 0:
        return -1
    else:
        return pow(n,m)


def PrintPasTriangle(rows):
    row = [1]
    for i in range(rows):
        print(row)
        row = [sum(x) for x in zip([0] + row, row + [0])]


PrintPasTriangle(10)
