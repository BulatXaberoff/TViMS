import wx
import wx.xrc
import wx.grid
import matplotlib
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.ticker import MultipleLocator
from linear_regression import *

class MyFrame1(wx.Frame):
    def __init__(self, parent):
        wx.Frame.__init__(self, parent, id=wx.ID_ANY, title=wx.EmptyString, pos=wx.DefaultPosition,
                          size=wx.Size(1100, 400), style=wx.DEFAULT_FRAME_STYLE | wx.TAB_TRAVERSAL)
        self.panel = wx.Panel(self)
        self.bSizer2 = wx.BoxSizer(wx.VERTICAL)

        self.ex_p1=False
        self.ex_p2=False

        self.arr_x=None
        self.arr_y=None

        menubar = wx.MenuBar()
        create_base = wx.Menu()
        item_base = create_base.Append(wx.ID_ANY, "Пустая колонка")
        create_base.Append(1, "1 пример")
        create_base.Append(2, "2 пример")

        menubar.Append(create_base, "&Linear_Reg")
        self.Bind(wx.EVT_MENU, self.onData, item_base)
        self.Bind(wx.EVT_MENU,self.onEx_1,id=1)

        self.txt = wx.StaticText(self.panel, label="Введите кол-во переменных")
        self.txt.Hide()
        self.bSizer2.Add(self.txt, 0, wx.ALIGN_CENTER | wx.ALL, 5)

        self.txctrl = wx.TextCtrl(self.panel, style=wx.TE_PROCESS_ENTER)
        self.txctrl.Hide()
        self.bSizer2.Add(self.txctrl, 0, wx.ALIGN_CENTER | wx.ALL, 5)
        self.Bind(wx.EVT_TEXT_ENTER,self.onTxctrl,self.txctrl)


        self.grid = wx.grid.Grid(self.panel, style=wx.TE_PROCESS_ENTER)
        self.grid.CreateGrid(2, 12)
        self.grid.Hide()
        self.bSizer2.Add(self.grid, 0, wx.ALIGN_CENTER | wx.ALL, 5)

        self.button=wx.Button(self.panel,-1,label="12")
        self.button.Hide()
        self.bSizer2.Add(self.button, 0, wx.ALIGN_CENTER | wx.ALL, 5)
        self.Bind(wx.EVT_BUTTON,self.onSolve,self.button)


        self.SetMenuBar(menubar)
        self.panel.SetSizer(self.bSizer2)
        self.bSizer2.Layout()
        self.panel.Layout()

    def onSolve(self,event):
        print(len(self.bSizer2.GetChildren()))
        while len(self.bSizer2.GetChildren())!=4:
            self.bSizer2.Hide(len(self.bSizer2.GetChildren())-1)
            self.bSizer2.Remove(len(self.bSizer2.GetChildren())-1)
        self.staticBmp = wx.StaticBitmap(self.panel, -1, wx.Bitmap('output.png'))
        self.bSizer2.Add(self.staticBmp, 0, wx.ALIGN_CENTER | wx.ALL, 5)
        self.bSizer2.Layout()


    def onEx_1(self,event):
        self.txt.Hide()

        arr_x = [-2, 0, 3, 7]
        arr_y = [0.4, 0.1, 0.3, 0.2]
        # arr_x=[12,9,8,14,15,11,10,15]
        # arr_y=[42,107,100,60,78,79,90,54]
        self.arr_x=arr_x
        self.arr_y=arr_y
        el=len(arr_x)

        while len(self.bSizer2.GetChildren())!=0:
            self.bSizer2.Hide(len(self.bSizer2.GetChildren())-1)
            self.bSizer2.Remove(len(self.bSizer2.GetChildren())-1)
        self.grid = wx.grid.Grid(self.panel, -1, style=wx.TE_PROCESS_ENTER)
        self.grid.CreateGrid(2, el)
        self.bSizer2.Add(self.grid, 0, wx.ALIGN_CENTER | wx.ALL, 5)

        for i in range(el):
            self.grid.SetCellValue(0, i, str(arr_x[i]))
        for i in range(el):
            self.grid.SetCellValue(1, i, str(arr_y[i]))

        self.staticBmp = wx.StaticBitmap(self.panel, -1, wx.Bitmap('output.png'))
        self.bSizer2.Add(self.staticBmp, 0, wx.ALIGN_CENTER | wx.ALL, 5)
        self.bSizer2.Layout()

        regression_func(np.array(arr_x),np.array(arr_y))


    def onTxctrl(self,event):
        print(len(self.bSizer2.GetChildren()))
        el = int(event.GetString())
        while len(self.bSizer2.GetChildren())!=2:
            self.bSizer2.Hide(len(self.bSizer2.GetChildren())-1)
            self.bSizer2.Remove(len(self.bSizer2.GetChildren())-1)

        self.grid = wx.grid.Grid(self.panel,-1, style=wx.TE_PROCESS_ENTER)
        self.grid.CreateGrid(2, el)
        self.bSizer2.Add(self.grid, 0, wx.ALIGN_CENTER | wx.ALL, 5)
        for i in range(2):
            for j in range(el):
                self.grid.SetCellValue(i, j, '0')


        self.button = wx.Button(self.panel, -1, label="12")
        self.bSizer2.Add(self.button, 0, wx.ALIGN_CENTER | wx.ALL, 10)
        self.Bind(wx.EVT_BUTTON,self.onSolve,self.button)


        self.bSizer2.Layout()


    def onData(self, event):
        print(len(self.bSizer2.GetChildren()))
        i=len(self.bSizer2.GetChildren())-1

        while len(self.bSizer2.GetChildren())!=2:
            self.bSizer2.Hide(i)
            self.bSizer2.Remove(i)
            i-=1
        self.txt.Show()
        self.txctrl.Show()

        self.bSizer2.Layout()
        self.panel.Layout()


app = wx.App()
frame = MyFrame1(None)
frame.Show()
app.MainLoop()
